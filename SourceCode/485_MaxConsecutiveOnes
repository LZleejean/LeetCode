//My method

int findMaxConsecutiveOnes(vector<int>& nums) {
        vector<int>::iterator it;
        vector<int> count;
        int item=0;
        for(it=nums.begin();it!=nums.end();it++)
        {
            if(*it==1)
            {
                item++;
            }
            else
            {
                count.push_back(item);
                item=0;
            }
        }
        if(item!=0)
        {
            count.push_back(item);
        }
        sort(count.begin(),count.end());
        return count[count.size()-1];
    }

//my second method

int findMaxConsecutiveOnes(vector<int>& nums) {
        vector<int>::iterator it;
        int count=0;
        int item=0;
        for(it=nums.begin();it!=nums.end();it++)
        {
            if(*it==1)
            {
                item++;
                if(item>count)
                {
                    count=item;
                }
            }
            else 
            {
                item=0;
            }
        }
        return count;
    }

// xiaobooluo's
int findMaxConsecutiveOnes(vector<int>& nums) 
{
    int max=0,cur=0;
    for(int i=0;i<nums.size();i++)
    {
        if(nums[i]==1)
        {
            max=max>++cur?max:cur;
        }
        else cur=0;
    }
    return max;
}
